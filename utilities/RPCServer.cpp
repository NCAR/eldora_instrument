#include "RPCServer.h"

///////////////////////////////////////////////////////////////////
RadarStart::RadarStart(XmlRpcServer* s):
    XmlRpcServerMethod("radarStart", s) {
}

///////////////////////////////////////////////////////////////////
void 
RadarStart::execute(XmlRpcValue& params, XmlRpcValue& result)
{
  result = "Radar started";
}

///////////////////////////////////////////////////////////////////
std::string 
RadarStart::help() { 
    return std::string("Start the radar"); 
}

///////////////////////////////////////////////////////////////////
RPCServer::RPCServer(int port):
	_port(port) {
    
    XmlRpc::setVerbosity(5);

    // Create the server socket on the specified port
    bindAndListen(_port);

    // Enable introspection
    enableIntrospection(true);

}

///////////////////////////////////////////////////////////////////
void
RPCServer::start() {
    
    // register the radar start command
    RadarStart(this);
    
    // Wait for requests indefinitely
    work(-1.0);
    
}
///////////////////////////////////////////////////////////////////
RPCServer::~RPCServer() {
	
}

///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////
