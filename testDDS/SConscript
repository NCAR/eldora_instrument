import os

env = Environment(ENV = os.environ)
env['TAO_ROOT'] = os.environ.get('TAO_ROOT',None)
env['ACE_ROOT'] = os.environ.get('ACE_ROOT',None)
env['DDS_ROOT'] = os.environ.get('DDS_ROOT',None)
env.AppendUnique(CPPPATH=['$TAO_ROOT',])
env.AppendUnique(CPPPATH=['$ACE_ROOT',])
env.AppendUnique(CPPPATH=['$DDS_ROOT',])
env.AppendUnique(CPPPATH=['#./ddslib',])
env.AppendUnique(CPPPATH=['#./ddssvc',])
env.AppendUnique(CPPPATH=['/usr/local/include/boost-1_34_1',])
env.AppendUnique(CCFLAGS=['-g',])

# libraries:
libs = Split("""
boost_program_options-gcc41-1_34_1.a
eldorasvc
EldoraDds
ReliableMulticast 
SimpleUnreliableDgram 
SimpleTcp
OpenDDS_Dcps
TAO_PortableServer
TAO_AnyTypeCode
TAO 
ACE
dl
pthread
rt
""")

# library paths:
libpaths=Split("""
../ddslib
../ddssvc
/usr/local/lib/
$ACE_ROOT/lib
$TAO_ROOT/lib
$DDS_ROOT/lib
""")

# Build publisher
pubsources = Split("""
testPublisher.cpp
""")
publisher = env.Program('publisher', pubsources, 
   LIBS=libs, LIBPATH=libpaths )

# Build subscriber
subsources = Split("""
testSubscriber.cpp
""")
subscriber = env.Program('subscriber', subsources, 
   LIBS=libs, LIBPATH=libpaths)
